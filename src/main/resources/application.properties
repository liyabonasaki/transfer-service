spring.application.name=transfer-service

server.port=8080

# H2 (in-memory)
spring.datasource.url=jdbc:h2:mem:transferdb;DB_CLOSE_DELAY=-1
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.hibernate.ddl-auto=update
spring.h2.console.enabled=true

# Where to call Ledger Service
# Uses environment variable LEDGER_SERVICE_URL if set, otherwise defaults to localhost:8081
ledger.base-url=${LEDGER_SERVICE_URL:http://localhost:8081}

# Resilience4j Circuit Breaker (less aggressive for batch testing)
resilience4j.circuitbreaker.instances.ledger.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.ledger.slidingWindowSize=50
resilience4j.circuitbreaker.instances.ledger.failureRateThreshold=70
resilience4j.circuitbreaker.instances.ledger.waitDurationInOpenState=30s
resilience4j.circuitbreaker.instances.ledger.permittedNumberOfCallsInHalfOpenState=10
resilience4j.circuitbreaker.instances.ledger.registerHealthIndicator=true

# Logging pattern includes requestId if present
logging.pattern.level=%5p [reqId:%X{requestId}]
